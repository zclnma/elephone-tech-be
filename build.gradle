plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.elephone'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(

            "org.apache.commons:commons-lang3:3.8.1",
            "org.apache.commons:commons-text:1.8",
            "commons-validator:commons-validator:1.7",
            "io.springfox:springfox-swagger2:$swagger",
            "io.springfox:springfox-swagger-ui:$swagger",
            "org.springframework.boot:spring-boot-starter-web:$springboot",
            "org.springframework.boot:spring-boot-starter-mail:$springboot",
            "org.springframework.boot:spring-boot-starter-data-jpa:$springboot",
            "org.springframework.boot:spring-boot-starter-security:$springboot",
            "org.springframework.boot:spring-boot-starter-actuator:$springboot",
            "org.springframework.boot:spring-boot-starter-validation:$springboot",
            "org.springframework.boot:spring-boot-starter-oauth2-resource-server:$springboot",
            "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:$springSecutiry",
            "com.itextpdf:html2pdf:$itextpdf",

            platform("software.amazon.awssdk:bom:$awsJavaSdk"),
            "software.amazon.awssdk:sesv2",
            "software.amazon.awssdk:cognitoidentityprovider",
            "software.amazon.awssdk:cognitoidentity",
            "software.amazon.awssdk:sqs",
            "software.amazon.awssdk:s3",
            "software.amazon.awssdk:sns",
    )

    compileOnly(
            "org.projectlombok:lombok:$lombok",
            "org.mapstruct:mapstruct:$mapstruct",
    )

    developmentOnly(
            "org.springframework.boot:spring-boot-devtools:$springboot"
    )

    runtimeOnly(
            "org.postgresql:postgresql:$postgres",
    )

    annotationProcessor(
            "org.springframework.boot:spring-boot-configuration-processor:$springboot",
            "org.projectlombok:lombok:$lombok",
            "org.mapstruct:mapstruct-processor:$mapstruct",
    )

    testImplementation(
            "org.springframework.boot:spring-boot-starter-test:$springboot",
            "org.springframework.security:spring-security-test:$springSecutiryTest"
    )
}

test {
    useJUnitPlatform()
}
